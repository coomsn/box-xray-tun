#!/system/bin/sh
scripts=$(realpath $0)
scripts_dir=$(dirname ${scripts})
parent_dir=$(dirname ${scripts_dir})
export PATH="/data/adb/magisk:/data/adb/ksu/bin:/data/adb/ap/bin:$PATH:/system/bin"

normal="\033[0m"
orange="\033[1;38;5;208m"
red="\033[1;31m"
green="\033[1;32m"
yellow="\033[1;33m"
blue="\033[1;34m"

config_file=${parent_dir}/confs/tun.json
binary=${parent_dir}/binary/sing-box

disable_ipv6() {
  echo 0 > /proc/sys/net/ipv6/conf/all/accept_ra
  echo 0 > /proc/sys/net/ipv6/conf/wlan0/accept_ra
  echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6
  echo 1 > /proc/sys/net/ipv6/conf/default/disable_ipv6
  echo 1 > /proc/sys/net/ipv6/conf/wlan0/disable_ipv6
} 

enable_ipv6() {
  echo 1 > /proc/sys/net/ipv6/conf/all/accept_ra
  echo 1 > /proc/sys/net/ipv6/conf/wlan0/accept_ra
  echo 0 > /proc/sys/net/ipv6/conf/all/disable_ipv6
  echo 0 > /proc/sys/net/ipv6/conf/default/disable_ipv6
  echo 0 > /proc/sys/net/ipv6/conf/wlan0/disable_ipv6
} 

tun_forward_ip_rules() {
local max_retries=5
local retry_count=0
local tun_table_index=""

while [ -z "$tun_table_index" ] && [ $retry_count -lt $max_retries ]; do
    tun_table_index=$(ip route show table all | grep -E "default dev ${tun_device} table [0-9]" | head -n 1 | awk '{print $5}')
    if [ -n "$tun_table_index" ]; then
        break
    fi
    sleep 1
    retry_count=$((retry_count + 1))
done
echo "tun_table_index: $tun_table_index" >> $scripts_dir/run.log

local action=$1
ipv4_rules=(
  "iif lo goto 6000 pref 5000"
  "iif ${tun_device} lookup main suppress_prefixlength 0 pref 5010"
  "iif ${tun_device} goto 6000 pref 5020"
  "from 10.0.0.0/8 lookup ${tun_table_index} pref 5030"
  "from 172.16.0.0/12 lookup ${tun_table_index} pref 5040"
  "from 192.168.0.0/16 lookup ${tun_table_index} pref 5050"
  "nop pref 6000"
)
  for rule in "${ipv4_rules[@]}"; do
    ip -4 rule "${action}" ${rule}
  done

ipv6_rules=(
  "iif lo goto 6000 pref 5000"
  "iif ${tun_device} lookup main suppress_prefixlength 0 pref 5010"
  "iif ${tun_device} goto 6000 pref 5020"
  # "from 2001:db8::/32 lookup ${tun_table_index} pref 5030"
  # "from fc00::/7 lookup ${tun_table_index} pref 5040"
  # "from fd00::/8 lookup ${tun_table_index} pref 5050"
  "nop pref 6000"
)
  for rule in "${ipv6_rules[@]}"; do
    ip -6 rule "${action}" ${rule}
  done
}

tun_forward_ip_rules_del() {
  for preff in 5000 5010 5020 5030 5040 5050 6000; do
    ip -4 rule del pref $preff
    ip -6 rule del pref $preff
  done
}

sing_tun_ip_rules() {
local max_retries=5
local retry_count=0
tun_device=""

while [ -z "${tun_device}" ] && [ $retry_count -lt $max_retries ]; do
    # tun_device=$(ip route | awk '{for(i=1;i<=NF;i++) if($i ~ /tun[0-9]+/) {print $i; exit}}')
    # tun_device=$(ip route show table all | grep "default dev" | grep -E "table [0-9]+" | awk '/dev/ {for(i=1;i<=NF;i++) if($i == "dev") {print $(i+1); exit}}')
    tun_device=$(awk -F'"' '/"interface_name"/ {print $4}' ${config_file})
    if [ -n "${tun_device}" ]; then
        break
    fi
    sleep 1
    retry_count=$((retry_count + 1))
done
echo "tun_device: ${tun_device}" > $scripts_dir/run.log

  ip -4 rule $1 lookup main pref 7000
  ip -4 rule $1 from all iif ${tun_device} lookup main suppress_prefixlength 0 pref 8000
  
  ip -6 rule $1 lookup main pref 7000
  ip -6 rule $1 from all iif ${tun_device} lookup main suppress_prefixlength 0 pref 8000
}

forward() {
local action=$1

  echo 1 > /proc/sys/net/ipv4/ip_forward
  echo 2 > /proc/sys/net/ipv4/conf/default/rp_filter
  echo 2 > /proc/sys/net/ipv4/conf/all/rp_filter
    
  if [ "${action}" = "-I" ]; then
    sing_tun_ip_rules "add"
    tun_forward_ip_rules "add"
  else
    sing_tun_ip_rules "del"
    tun_forward_ip_rules "del"
  fi
  
  echo "action: ${action}" >> "${scripts_dir}/run.log"
  iptables "${action}" FORWARD -i "${tun_device}" -j ACCEPT
  iptables "${action}" FORWARD -o "${tun_device}" -j ACCEPT
  ip6tables "${action}" FORWARD -i "${tun_device}" -j ACCEPT
  ip6tables "${action}" FORWARD -o "${tun_device}" -j ACCEPT

  return 0
}

start_tun() {
if pidof "${binary}"; then
    stop_tun
fi
  chmod +x ${binary}
  chown root:net_admin ${binary}
  nohup ${binary} run -c ${config_file} -D ${parent_dir}/binary/ > /dev/null 2>&1 &
  enable_ipv6
  forward -I
  pid=$(pidof sing-box 2>/dev/null)
  [ -n "${pid}" ] && echo "pid: ${pid}" >> "${scripts_dir}/run.log"
  echo "tun started" >> "${scripts_dir}/run.log"
  update_description "✔" "is running."
}

stop_tun() {
  pid=$(pidof sing-box 2>/dev/null)
  forward -D
  disable_ipv6
  tun_forward_ip_rules_del
  kill $pid > /dev/null 2>&1
  echo "tun stopped" >> "${scripts_dir}/run.log"
  update_description "✘" "was stopped."
}

# version
version_number() {
if [ -f "${binary}" ]; then
  version=$(${binary} version | head -n 1 | awk '{print $3}')
fi
}

update_description() {
  local symbol=$1
  local event=$2
  local network_mode="tun"
  version_number
  prop_file="/data/adb/modules/box_tun-module/module.prop"
  core_name="${binary##*/}"
  current_time=$(date "+[%m.%d %H:%M]")
  sed -i "/description/c\description=${current_time} ${symbol} ${core_name} ${version} ${network_mode} ${event}" "${prop_file}"
}

# 2024 9 21 1200
