#!/system/bin/sh
scripts=$(realpath $0)
scripts_dir=$(dirname ${scripts})
parent_dir=$(dirname ${scripts_dir})

normal="\033[0m"
orange="\033[1;38;5;208m"
red="\033[1;31m"
green="\033[1;32m"
yellow="\033[1;33m"
blue="\033[1;34m"

config_file=${parent_dir}/confs/tun.json
binary=${parent_dir}/binary/sing-box
interface_name=$(grep '"interface_name"' "${config_file}" | awk -F'"' '{print $4}')

export PATH="/data/adb/magisk:/data/adb/ksu/bin:/data/adb/ap/bin:$PATH:/system/bin"

pref="100"
tun_forward="enabled"
tun_device="${interface_name}"

disable_ipv6() {
  echo 0 > /proc/sys/net/ipv6/conf/all/accept_ra
  echo 0 > /proc/sys/net/ipv6/conf/wlan0/accept_ra
  echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6
  echo 1 > /proc/sys/net/ipv6/conf/default/disable_ipv6
  echo 1 > /proc/sys/net/ipv6/conf/wlan0/disable_ipv6
} >> /dev/null 2>&1

ipv6_enable() {
  echo 1 > /proc/sys/net/ipv6/conf/all/accept_ra
  echo 1 > /proc/sys/net/ipv6/conf/wlan0/accept_ra
  echo 0 > /proc/sys/net/ipv6/conf/all/disable_ipv6
  echo 0 > /proc/sys/net/ipv6/conf/default/disable_ipv6
  echo 0 > /proc/sys/net/ipv6/conf/wlan0/disable_ipv6
} >> /dev/null 2>&1

# Function to probe for the tun device
probe_tun_device() {
  ifconfig | grep -q "${tun_device}" || return 1
}

# Function to get the tun device index from rt_tables
probe_tun_index() {
  while [ ! -f "/data/misc/net/rt_tables" ]; do
    sleep 1
  done
  while read -r index name; do
    if [ "${name}" = "${tun_device}" ]; then
      tun_table_index=${index}
      return 0
    fi
  done < /data/misc/net/rt_tables
  return 1
}

# Function to manage IP rules for the tun device
tun_forward_ip_rules() {
local action=$1
ipv4_rules=(
  "iif lo goto 6000 pref 5000"
  "iif ${tun_device} lookup main suppress_prefixlength 0 pref 5010"
  "iif ${tun_device} goto 6000 pref 5020"
  "from 10.0.0.0/8 lookup ${tun_table_index} pref 5030"
  "from 172.16.0.0/12 lookup ${tun_table_index} pref 5040"
  "from 192.168.0.0/16 lookup ${tun_table_index} pref 5050"
  "nop pref 6000"
)

ipv6_rules=(
  "iif lo goto 6000 pref 5000"
  "iif ${tun_device} lookup main suppress_prefixlength 0 pref 5010"
  # "from 2001:db8::/32 lookup ${tun_table_index} pref 5030"
  # "from fc00::/7 lookup ${tun_table_index} pref 5040"
  # "from fd00::/8 lookup ${tun_table_index} pref 5050"
  "iif ${tun_device} goto 6000 pref 5020"
  "nop pref 6000"
)

  for rule in "${ipv4_rules[@]}"; do
    ip -4 rule "${action}" ${rule}
  done

  for rule in "${ipv6_rules[@]}"; do
    ip -6 rule "${action}" ${rule}
  done
}

# Function to delete IP rules for the tun device
tun_forward_ip_rules_del() {
  for preff in 5000 5010 5020 5030 5040 5050 6000; do
    ip -4 rule del pref $preff
    ip -6 rule del pref $preff
  done
}

sing_tun_ip_rules() {
  ip -4 rule $1 from all iif ${tun_device} lookup main suppress_prefixlength 0 pref 8000
  ip -4 rule $1 lookup main pref 7000

  ip -6 rule $1 from all iif ${tun_device} lookup main suppress_prefixlength 0 pref 8000
  ip -6 rule $1 lookup main pref 7000
}

# Function to modify the FORWARD chain for the specified tun device using iptables
forward() {
  local action=$1

  iptables "${action}" FORWARD -i "${tun_device}" -j ACCEPT
  iptables "${action}" FORWARD -o "${tun_device}" -j ACCEPT
  
  ip6tables "${action}" FORWARD -i "${tun_device}" -j ACCEPT
  ip6tables "${action}" FORWARD -o "${tun_device}" -j ACCEPT

  sysctl -w net.ipv4.ip_forward=1
  sysctl -w net.ipv4.conf.default.rp_filter=2
  sysctl -w net.ipv4.conf.all.rp_filter=2

  probe_tun_index

  if [ "${tun_forward}" = "enabled" ]; then
    if probe_tun_device; then
      tun_forward_ip_rules_del
      tun_forward_ip_rules "${action}"
      if [ "${action}" = "-I" ]; then
        sing_tun_ip_rules "add"
      else
        sing_tun_ip_rules "del"
      fi
    else
      tun_forward_ip_rules_del
      tun_forward_ip_rules -D
      sing_tun_ip_rules "del"
      return 1
    fi
  fi
  return 0
} >> /dev/null 2>&1

run_tun() {
  stop_tun > /dev/null 2>&1
  chmod +x ${binary}
  chown root:net_admin ${binary}
  nohup ${binary} run -c ${config_file} -D ${parent_dir}/binary/ > /dev/null 2>&1 &
  ipv6_enable
  forward -I
  pid=$(pidof sing-box 2>/dev/null)
  [ -n "${pid}" ] && echo "${pid}" > "${scripts_dir}/pid"
}

stop_tun() {
  pid=$(pidof sing-box 2>/dev/null)
  kill $pid > /dev/null 2>&1
  forward -D
  disable_ipv6
  rm -rf ${scripts_dir}/pid
}
# 2024 9 20
